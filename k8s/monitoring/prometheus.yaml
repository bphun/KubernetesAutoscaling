apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    name: prometheus
  # - port: 9091
  #   name: statsd-prom
  # - port: 9125
  #   protocol: UDP
  #   name: statsd
  # - port: 9093
  #   name: nginx-exporter
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  name: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
      run: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        run: prometheus
        app: prometheus
    spec:
      volumes:
        - name: prometheus-pv-volume
          persistentVolumeClaim:
            claimName: prometheus-pv-claim
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:prometheus
        imagePullPolicy: Always
        volumeMounts:
        - name: prometheus-pv-volume
          mountPath: /prometheus
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 9090
      # - name: statsd
      #   image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:statsd
      #   imagePullPolicy: Always
      #   ports:
      #   - containerPort: 9091
      #   - containerPort: 9125
      #     protocol: UDP
      # - name: nginx-exporter
      #   image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:nginx-exporter
      #   imagePullPolicy: Always
      #   ports:
      #   - containerPort: 9093
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   namespace: monitoring
#   name: prometheus
# spec:
#   containers:
#     - name: prometheus
#       image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:prometheus
#       imagePullPolicy: Always
#     - name: statsd
#       image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:statsd
#       imagePullPolicy: Always
#     - name: nginx-exporter
#       image: public.ecr.aws/h6v8s1y1/k8s-autoscaling:nginx-exporter
#       imagePullPolicy: Always
    # resources:
    #   requests:
    #     cpu: "4"
    #   limits:
    #     cpu: "5"